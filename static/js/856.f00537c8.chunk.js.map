{"version":3,"file":"static/js/856.f00537c8.chunk.js","mappings":"uLAKA,qBACI,IAAMA,EAAOC,IAAa,CAAEC,eAAe,IAErCC,EADaC,IAAkB,CAAEJ,KAAAA,IACZK,aAoB3B,OADAC,EAAAA,EAAAA,KAAe,+BAlBS,SAACC,EAAaC,GAAd,OACpBL,EAAQI,EAAKC,GAAMC,MAAK,SAACC,GACrB,IAAMC,EAAMC,KAAKC,MAAML,EAAKM,MACtBC,EAAYH,KAAKC,MAAMH,EAAII,MAYjC,OAXAE,QAAQC,eAAR,kBAAkCN,EAAIO,gBACtCF,QAAQG,MAAM,WACdH,QAAQI,IAAI,gBAAiBT,EAAIO,eACjCF,QAAQI,IAAIT,EAAIU,OAChBL,QAAQI,IAAI,YAAaT,EAAIW,WAC7BN,QAAQO,WACRP,QAAQG,MAAM,YACdH,QAAQI,IAAI,OAAQL,EAAUf,MAC9BgB,QAAQI,IAAI,SAAUL,EAAUS,QAChCR,QAAQO,WACRP,QAAQO,WACDb,CACV,GAhBmB,IAmBjB,kBAAMJ,EAAAA,EAAAA,SAAN,CAvBX,C","sources":["fakeServer/graphql.ts"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport JsonGraphqlServer from 'json-graphql-server';\nimport generateData from 'data-generator-retail';\nimport fetchMock from 'fetch-mock';\n\nexport default () => {\n    const data = generateData({ serializeDate: false });\n    const restServer = JsonGraphqlServer({ data });\n    const handler = restServer.getHandler();\n    const handlerWithLogs = (url: string, opts: any) =>\n        handler(url, opts).then((res: any) => {\n            const req = JSON.parse(opts.body);\n            const parsedRes = JSON.parse(res.body);\n            console.groupCollapsed(`GraphQL ${req.operationName}`);\n            console.group('request');\n            console.log('operationName', req.operationName);\n            console.log(req.query);\n            console.log('variables', req.variables);\n            console.groupEnd();\n            console.group('response');\n            console.log('data', parsedRes.data);\n            console.log('errors', parsedRes.errors);\n            console.groupEnd();\n            console.groupEnd();\n            return res;\n        });\n\n    fetchMock.mock('begin:http://localhost:4000', handlerWithLogs);\n    return () => fetchMock.restore();\n};\n"],"names":["data","generateData","serializeDate","handler","JsonGraphqlServer","getHandler","fetchMock","url","opts","then","res","req","JSON","parse","body","parsedRes","console","groupCollapsed","operationName","group","log","query","variables","groupEnd","errors"],"sourceRoot":""}