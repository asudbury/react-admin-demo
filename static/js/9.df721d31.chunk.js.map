{"version":3,"sources":["fakeServer/rest.ts"],"names":["data","generateData","serializeDate","restServer","FakeRest","FetchServer","window","init","toggleLogging","fetchMock","mock","getHandler","restore"],"mappings":"6HAAA,2DAKe,qBACb,IAAMA,EAAOC,IAAa,CAAEC,eAAe,IACrCC,EAAa,IAAIC,IAASC,YAAY,yBAO5C,OANIC,SACFA,OAAOH,WAAaA,GAEtBA,EAAWI,KAAKP,GAChBG,EAAWK,gBACXC,IAAUC,KAAK,8BAA+BP,EAAWQ,cAClD,kBAAMF,IAAUG","file":"static/js/9.df721d31.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport FakeRest from \"fakerest\";\nimport fetchMock from \"fetch-mock\";\nimport generateData from \"data-generator-retail\";\n\nexport default () => {\n  const data = generateData({ serializeDate: true });\n  const restServer = new FakeRest.FetchServer(\"http://localhost:4000\");\n  if (window) {\n    window.restServer = restServer; // give way to update data in the console\n  }\n  restServer.init(data);\n  restServer.toggleLogging(); // logging is off by default, enable it\n  fetchMock.mock(\"begin:http://localhost:4000\", restServer.getHandler());\n  return () => fetchMock.restore();\n};\n"],"sourceRoot":""}